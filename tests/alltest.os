#Использовать asserts
#Использовать entity
#Использовать ".."

#Область ПередИПосле
&Перед
Процедура ПередЗапускомТеста() Экспорт	
	JSON = Новый Структура;
	JSON.Вставить("name", "admin");
	JSON.Вставить("password", "password");

	Ответ = КоннекторHTTP.Post("localhost:5984/_session", , JSON);
	Параметры = Новый Структура("Cookies", Ответ.Cookies);
	Ответ = КоннекторHTTP.Put("localhost:5984/test/", , , Параметры);
КонецПроцедуры

&После
Процедура ПослеЗапускаТеста() Экспорт
	JSON = Новый Структура;
	JSON.Вставить("name", "admin");
	JSON.Вставить("password", "password");

	Ответ = КоннекторHTTP.Post("localhost:5984/_session", , JSON);
	Параметры = Новый Структура("Cookies", Ответ.Cookies);
	Ответ = КоннекторHTTP.Delete("localhost:5984/test/", , , Параметры);	
КонецПроцедуры
#КонецОбласти

&Тест
Процедура СозданиеБазыДанных() Экспорт
	Авторизация = Новый Структура("name, password", "admin", "password");
	ПараметрыКоннектора = Новый Массив;
	ПараметрыКоннектора.Добавить(Новый Структура("Авторизация", Авторизация));
	МенеджерСущностей = Новый МенеджерСущностей(Тип("КоннекторCouchDB"), "http://localhost:5984", ПараметрыКоннектора);
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("БазаДанных"));
	МенеджерСущностей.Инициализировать();

	БазаДанных = Новый БазаДанных;
	БазаДанных.Имя = "new_data_base";
	МенеджерСущностей.Сохранить(БазаДанных);

	ПолученнаяСущность = МенеджерСущностей.ПолучитьОдно(Тип("БазаДанных"), "new_data_base");
	Ожидаем.Что(ПолученнаяСущность.Имя).Равно("new_data_base");

	JSON = Новый Структура;
	JSON.Вставить("name", "admin");
	JSON.Вставить("password", "password");

	Ответ = КоннекторHTTP.Post("localhost:5984/_session", , JSON);
	Параметры = Новый Структура("Cookies", Ответ.Cookies);
	Ответ = КоннекторHTTP.Delete("localhost:5984/new_data_base/", , , Параметры);	
КонецПроцедуры

&Тест
Процедура СозданиеДокумента() Экспорт
	Авторизация = Новый Структура("name, password", "admin", "password");
	ПараметрыКоннектора = Новый Массив;
	ПараметрыКоннектора.Добавить(Новый Структура("Авторизация", Авторизация));
	МенеджерСущностей = Новый МенеджерСущностей(Тип("КоннекторCouchDB"), "http://localhost:5984", ПараметрыКоннектора);
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("БазаДанных"));
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("Документ"));
	МенеджерСущностей.Инициализировать();

	Документ = Новый Документ;
	Документ.Идентификатор = "NewDocument";
	Документ.Имя = "Мой тестовый документ";
	Документ.БазаДанных = "test";
	МенеджерСущностей.Сохранить(Документ);

	МассивОтборов = Новый Массив;
	МассивОтборов.Добавить(Новый ЭлементОтбора("Имя", ВидСравнения.Равно, "Мой тестовый документ"));
	МассивОтборов.Добавить(Новый ЭлементОтбора("БазаДанных", ВидСравнения.Равно, "test"));

	ПолученнаяСущность = МенеджерСущностей.ПолучитьОдно(Тип("Документ"), МассивОтборов);
	Ожидаем.Что(ПолученнаяСущность.Имя).Равно("Мой тестовый документ");
	Ожидаем.Что(ПолученнаяСущность.Идентификатор).Равно("NewDocument");
	Ожидаем.Что(ПолученнаяСущность.БазаДанных.Имя).Равно("test");
	Ожидаем.Что(ПолученнаяСущность.БазаДанных.КоличествоДокументов).Равно("1");
КонецПроцедуры
// oscript.exe .\tasks\coverage.os - для запуска ковереджа