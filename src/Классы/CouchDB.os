#Использовать entity
#Использовать decorator

#Область ОписаниеПеременных
Перем ТекущаяБазаДанных; // Текущая база данных
Перем ТекущийДокумент; // Текущий документ
Перем ТекущееВложение; // Текущее вложение
Перем МенеджерСущностей; // Менеджер сущностей
Перем ХранилищеБазДанных; // Хранилище баз данных
Перем ХранилищеДокументов; // Хранилище документов
Перем ХранилищеВложений; // Хранилище вложений
#КонецОбласти

#Область ОбработчикиСобытий
Процедура ПриСозданииОбъекта()
	Авторизация = Новый Структура("name, password", "admin", "password");
	ПараметрыКоннектора = Новый Массив;
	ПараметрыКоннектора.Добавить(Новый Структура("Авторизация", Авторизация));
	МенеджерСущностей = Новый МенеджерСущностей(Тип("КоннекторCouchDB"), "http://localhost:5984", ПараметрыКоннектора);
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("БазаДанных"));
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("Документ"));
	МенеджерСущностей.ДобавитьКлассВМодель(Тип("Вложение"));
	МенеджерСущностей.Инициализировать();

	ХранилищеБазДанных = МенеджерСущностей.ПолучитьХранилищеСущностей(Тип("БазаДанных"));
	ХранилищеДокументов = МенеджерСущностей.ПолучитьХранилищеСущностей(Тип("Документ"));
	ХранилищеВложений = МенеджерСущностей.ПолучитьХранилищеСущностей(Тип("Вложение"));
КонецПроцедуры
#КонецОбласти

#Область ПрограммныйИнтерфейс
Процедура Сохранить(Сущность) Экспорт
	Тип = ОбработкаДекоратора.ИсходныйТип(Сущность);

	Если Тип = Тип("БазаДанных") Тогда
		Сущность.Сохранить();
	ИначеЕсли Тип = Тип("Документ") Тогда
		ДобавитьПолеБазыДанных(Сущность);
		Сущность.Сохранить();
	ИначеЕсли Тип = Тип("Вложение") Тогда
		ДобавитьПолеБазыДанных(Сущность);
		ДобавитьПолеДокумента(Сущность);
		Сущность.Сохранить();
	Иначе
		ВызватьИсключение "Неизвестный тип сущности";
	КонецЕсли;
КонецПроцедуры

Функция НоваяБазаДанных(ИмяБазыДанных) Экспорт
	ТекущаяБазаДанных = ХранилищеБазДанных.СоздатьЭлемент();
	ТекущаяБазаДанных.Имя = ИмяБазыДанных;
	ТекущаяБазаДанных.Прочитать();

	Возврат ТекущаяБазаДанных;
КонецФункции

Процедура УстановитьБазуДанных(ИмяБазыДанных) Экспорт
	ТекущаяБазаДанных = ХранилищеБазДанных.ПолучитьОдно(ИмяБазыДанных);
КонецПроцедуры

Функция ТекущаяБазаДанных() Экспорт
	Возврат ТекущаяБазаДанных;
КонецФункции

Функция НовыйДокумент(ИмяДокумента) Экспорт
	ТекущийДокумент = ХранилищеДокументов.СоздатьЭлемент();
	ТекущийДокумент.Имя = ИмяДокумента;
	ТекущийДокумент.Прочитать();

	Возврат ТекущийДокумент;
КонецФункции

Процедура УстановитьДокумент(ИмяДокумента) Экспорт
	ТекущийДокумент = ХранилищеДокументов.ПолучитьОдно(ИмяДокумента);
КонецПроцедуры

Функция ТекущийДокумент() Экспорт
	Возврат ТекущийДокумент;
КонецФункции

Функция НовоеВложение(ИмяВложения) Экспорт
	ТекущееВложение = ХранилищеВложений.СоздатьЭлемент();
	ТекущееВложение.Имя = ИмяВложения;
	ТекущееВложение.Прочитать();

	Возврат ТекущееВложение;
КонецФункции

Процедура УстановитьВложение(ИмяВложения) Экспорт
	ТекущееВложение = ХранилищеВложений.ПолучитьОдно(ИмяВложения);
КонецПроцедуры

Функция ТекущееВложение() Экспорт
	Возврат ТекущееВложение;
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура ДобавитьПолеБазыДанных(Сущность)
	Поле = Новый Поле("БазаДанных").Публичное();
	Сущность = Новый ПостроительДекоратора(Сущность)
		.Поле(Поле)
		.ЗначениеПоУмолчанию(ТекущаяБазаДанных)
		.Построить();
КонецПроцедуры

Процедура ДобавитьПолеДокумента(Сущность)
	Поле = Новый Поле("Документ").Публичное();
	Сущность = Новый ПостроительДекоратора(Сущность)
		.Поле(Поле)
		.ЗначениеПоУмолчанию(ТекущийДокумент)
		.Построить();
КонецПроцедуры
#КонецОбласти